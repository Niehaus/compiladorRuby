------------Token Buffer----------------
Token           | Num. da Linha | Lexema
INT                    0         int
MAIN                   0         main
LBRACKET               0         (
RBRACKET               0         )
LBRACE                 0         {
INT                    1         int
ID                     1         q
ATTR                   1         =
INTEGER_CONST          linha     ["1", "2", "3"]
PCOMMA                 1         ;
INT                    2         int
ID                     2         b
ATTR                   2         =
INTEGER_CONST          linha     ["2", "9"]
PCOMMA                 2         ;
INT                    3         int
ID                     3         d
ATTR                   3         =
INTEGER_CONST          linha     ["2", "1"]
COMMA                  3         ,
ID                     3         c
COMMA                  3         ,
ID                     3         a
PCOMMA                 3         ;
FOR                    5         for
LBRACKET               5         (
ID                     5         b
ATTR                   5         =
INTEGER_CONST          linha     ["0"]
PCOMMA                 5         ;
ID                     5         b
LT                     5         <
INTEGER_CONST          linha     ["1", "0"]
PCOMMA                 5         ;
ID                     5         b
ATTR                   5         =
ID                     5         b
PLUS                   5         +
INTEGER_CONST          linha     ["1"]
RBRACKET               5         )
LBRACE                 5         {
ID                     6         a
ATTR                   6         =
LBRACKET               6         (
ID                     6         b
PLUS                   6         +
INTEGER_CONST          linha     ["2", "0"]
RBRACKET               6         )
MULT                   6         *
ID                     6         c
PCOMMA                 6         ;
IF                     7         if
LBRACKET               7         (
ID                     7         a
LT                     7         <
ID                     7         b
RBRACKET               7         )
LBRACE                 8         {
ID                     9         a
ATTR                   9         =
LBRACKET               9         (
ID                     9         b
PLUS                   9         +
INTEGER_CONST          linha     ["2", "0"]
RBRACKET               9         )
MULT                   9         *
LBRACKET               9         (
ID                     9         c
PLUS                   9         +
ID                     9         d
RBRACKET               9         )
PCOMMA                 9         ;
ID                     10        a
ATTR                   10        =
LBRACKET               10        (
ID                     10        a
DIV                    10        /
ID                     10        b
RBRACKET               10        )
PCOMMA                 10        ;
PRINT                  11        print
LBRACKET               11        (
ID                     11        a
RBRACKET               11        )
PCOMMA                 11        ;
RBRACE                 12        }
ELSE                   12        else
LBRACE                 13        {
ID                     14        a
ATTR                   14        =
INTEGER_CONST          linha     ["4", "0", "0"]
PCOMMA                 14        ;
RBRACE                 15        }
RBRACE                 17        }
RBRACE                 20        }
